#This template was authored and provided by Marcus Atty from MissionLabs for CCM to deploy to enable functionality for the SmartAgent application
# in use by Gas Safe Register.
AWSTemplateFormatVersion: '2010-09-09'

Description: Bespoke template for SmartAgent data warehouse.

Parameters:
    pEnvironment:
        Type: String
        Description: >
            Enter the full name of the environment that this stack is being
            deployed to.
    pEnvironmentLowerCase:
        Type: String
        Description: >
            Enter the lower case name of the environment that this stack is
            being deployed to.
    pLambdaBucket:
        Type: String
        Description:
            This template contains lambda functions. Each one is packed in a zip
            file. Enter name of the bucket these zip files are stored in.
    pAgentEventsLambdaZip:
        Type: String
        Description: >
            Lambda processes agent events from Amazon Connect. Enter path to zip
            archive in Lambda bucket.
    pAgentEventsStream:
        Type: String
        Description: >
            Enter the name of the Kinesis stream that ingests agent events from
            Amazon Connect.
#   pContactTraceRecordStream:
#       Type: String
#       Description: >
#           Enter the name of the Firehose stream that ingests contact trace
#           record events from Amazon Connect.

Resources:
    # Agent Events Lambda Resources
    IamRoleLambdaExecution:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                          Service: lambda.amazonaws.com
                      Action: sts:AssumeRole
            Policies:
                - PolicyName: lambda-policy
                  PolicyDocument:
                      Version: 2012-10-17
                      Statement:
                          - Effect: Allow
                            Action:
                                - logs:CreateLogStream
                                - logs:PutLogEvents
                            Resource:
                                - !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}-${pEnvironmentLowerCase}*:*

                          - Effect: Allow
                            Action:
                                - s3:ListBucket
                            Resource:
                                - !GetAtt WarehouseBucket.Arn

                          - Effect: Allow
                            Action:
                                - s3:GetObject
                                - s3:PutObject
                            Resource:
                                - !Join [
                                      /,
                                      [
                                          !GetAtt WarehouseBucket.Arn,
                                          agent-status,
                                          '*',
                                      ],
                                  ]

                          - Effect: Allow
                            Action:
                                - firehose:PutRecordBatch
                            Resource:
                                - !GetAtt FirehoseAgentEvents.Arn

                          - Effect: Allow
                            Action:
                                - kinesis:GetRecords
                                - kinesis:GetShardIterator
                                - kinesis:DescribeStream
                                - kinesis:ListStreams
                            Resource:
                                - !Sub arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${pAgentEventsStream}
    AgentEventsLogGroup:
        Type: AWS::Logs::LogGroup
        Properties:
            LogGroupName: !Sub /aws/lambda/${AWS::StackName}-${pEnvironmentLowerCase}-agent-events
    AgentEventsLambdaFunction:
        Type: AWS::Lambda::Function
        DependsOn:
            - AgentEventsLogGroup
            - IamRoleLambdaExecution
        Properties:
            FunctionName: !Sub ${AWS::StackName}-${pEnvironmentLowerCase}-agent-events
            Role: !GetAtt IamRoleLambdaExecution.Arn
            Handler: build/agent-events/index.handler
            Runtime: nodejs10.x
            MemorySize: 1024
            Timeout: 10
            Code:
                S3Bucket: !Ref pLambdaBucket
                S3Key: !Ref pAgentEventsLambdaZip
            Environment:
                Variables:
                    WAREHOUSE_BUCKET: !Ref WarehouseBucket
                    FIREHOSE_AGENT_EVENTS: !Ref FirehoseAgentEvents
    AgentEventsEventSourceMappingKinesisAgentEventStream:
        Type: AWS::Lambda::EventSourceMapping
        DependsOn: IamRoleLambdaExecution
        Properties:
            BatchSize: 10000
            EventSourceArn: !Sub arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${pAgentEventsStream}
            FunctionName: !GetAtt AgentEventsLambdaFunction.Arn
            StartingPosition: TRIM_HORIZON
            Enabled: 'True'

    # Warehouse Resources
    WarehouseBucket:
        Type: AWS::S3::Bucket
    WarehouseDatabase:
        Type: AWS::Glue::Database
        Properties:
            CatalogId: !Ref AWS::AccountId
            DatabaseInput:
                Name: smartagent_data_warehouse

    # Streaming Resources
    FirehoseRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Principal:
                          Service: firehose.amazonaws.com
                      Action: sts:AssumeRole
    FirehosePolicy:
        Type: AWS::IAM::Policy
        Properties:
            PolicyName: !Sub ${AWS::StackName}-${pEnvironmentLowerCase}-${AWS::Region}-firehose
            PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Action:
                          - s3:AbortMultipartUpload
                          - s3:GetBucketLocation
                          - s3:GetObject
                          - s3:ListBucket
                          - s3:ListBucketMultipartUploads
                          - s3:PutObject
                      Resource:
                          - !GetAtt WarehouseBucket.Arn
                          - !Join [/, [!GetAtt WarehouseBucket.Arn, '*']]
                    - Effect: Allow
                      Action:
                          - glue:GetTableVersions
                      Resource: '*'
            Roles:
                - !Ref FirehoseRole
    FirehoseAgentEvents:
        Type: AWS::KinesisFirehose::DeliveryStream
        Properties:
            DeliveryStreamType: DirectPut
            S3DestinationConfiguration:
                BucketARN: !GetAtt WarehouseBucket.Arn
                Prefix: agent-event-log/
                BufferingHints:
                    IntervalInSeconds: 60
                    SizeInMBs: 128
                CompressionFormat: GZIP
                RoleARN: !GetAtt FirehoseRole.Arn

    # IAM user for Amazon Connect access
    SmartAgentUser:
        Type: AWS::IAM::User
        Properties:
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/AmazonConnectFullAccess
            Policies:
                - PolicyName: smartagent
                  PolicyDocument:
                      Version: '2012-10-17'
                      Statement:
                          # Athena Permissions
                          - Effect: Allow
                            Action:
                                - glue:GetDatabase
                                - glue:GetTable
                            Resource:
                                - !Sub arn:aws:glue:eu-central-1:${AWS::AccountId}:catalog
                                - !Sub arn:aws:glue:eu-central-1:${AWS::AccountId}:database/smartagent_data_warehouse
                                - !Sub arn:aws:glue:eu-central-1:${AWS::AccountId}:table/smartagent_data_warehouse/*
                          - Effect: Allow
                            Action:
                                - athena:StartQueryExecution
                                - athena:StopQueryExecution
                                - athena:GetQueryExecution
                            Resource:
                                - !Sub arn:aws:athena:eu-central-1:${AWS::AccountId}:workgroup/primary
                          - Effect: Allow
                            Action:
                                - s3:ListBucket
                                - s3:GetObject
                                - s3:GetObjectACL
                            Resource:
                                - !GetAtt WarehouseBucket.Arn
                                - !Join [/, [!GetAtt WarehouseBucket.Arn, '*']]
                          - Effect: Allow
                            Action:
                                - s3:PutObject
                                - s3:PutObjectACL
                            Resource:
                                - !Join [
                                      /,
                                      [
                                          !GetAtt WarehouseBucket.Arn,
                                          '*',
                                          athena-results,
                                      ],
                                  ]
