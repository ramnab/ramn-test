AWSTemplateFormatVersion: "2010-09-09"
Description: Basic account setup for Capita RTA web application

Parameters:
  pEnvironment:
    Type: String
    Default: DEV
    Description: Environment label to apply to resources naming
  pEnvironmentLowerCase:
    Type: String
    Default: dev
    Description: Environment label to apply to resources naming, lower case
  pDepartment:
    Type: String
    Default: ccm
    Description: Department identifier for unique bucket naming, lowercase

Resources:

  CustomerParquetFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub "kfh-${pDepartment}-ctr-${pEnvironmentLowerCase}"
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: !Sub "arn:aws:s3:::s3-capita-${pDepartment}-connect-common-${pEnvironmentLowerCase}-reporting"
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 128
        CompressionFormat: "UNCOMPRESSED"
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref CtrFirehoseLogGroup
          LogStreamName: !Ref CtrFirehoseLogStream
        EncryptionConfiguration:
          KMSEncryptionConfig:
            AWSKMSKeyARN: "arn:aws:kms:eu-central-1:907290942892:key/2ba2c713-967b-4405-91a2-0d249c6c3500"
        Prefix: "Contact_Record/"
        RoleARN: !GetAtt CtrFirehoseIAMRole.Arn

  CtrFirehoseIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: "mi-ctr-firehose-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Sid: "firehosecommoncrossaccountbucketaccess"
            Action: "sts:AssumeRole"
            Principal: 
              "Service": "firehose.amazonaws.com"
      Policies:
      - PolicyName: !Sub "access_schedule_bucket_only_${pEnvironmentLowerCase}"
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - s3:AbortMultipartUpload
            - s3:GetBucketLocation
            - s3:GetObject
            - s3:ListBucket
            - s3:ListBucketMultipartUploads
            - s3:PutObject
            - s3:PutObjectAcl
            Resource:
            - !Sub "arn:aws:s3:::s3-capita-${pDepartment}-connect-common-${pEnvironmentLowerCase}-reporting"
            - !Sub "arn:aws:s3:::s3-capita-${pDepartment}-connect-common-${pEnvironmentLowerCase}-reporting/*"
            Effect: Allow
            Sid: clientreportfirehoses3
          - Action:
            - logs:PutLogEvents
            Resource: !GetAtt CtrFirehoseLogGroup.Arn
            Effect: Allow
            Sid: clientreportfirehoselogs
          - Action:
            - kms:Decrypt
            - kms:GenerateDataKey
            Resource:
            - "arn:aws:kms:eu-central-1:907290942892:key/2ba2c713-967b-4405-91a2-0d249c6c3500"
            Effect: Allow
            Sid: clientreportfirehosekms
            Condition:
              StringEquals:
                kms:ViaService: "s3.eu-central-1.amazonaws.com"
              StringLike:
                kms:EncryptionContext:aws:s3:arn: !Sub "arn:aws:s3:::s3-capita-${pDepartment}-connect-common-${pEnvironmentLowerCase}-reporting/*"

  CtrFirehoseLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/firehose/mi-${pEnvironmentLowerCase}-ctr"

  CtrFirehoseLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref CtrFirehoseLogGroup
