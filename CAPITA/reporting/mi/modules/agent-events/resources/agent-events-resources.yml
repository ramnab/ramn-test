AWSTemplateFormatVersion: "2010-09-09"
Description: CAPITA MI Agent Events Resources

Parameters:
  pTransformationDb:
    Type: String
    Description: Name of Glue database in this account, used for transformation
  pCtrCommonDestination:
    Type: String
    Description: S3 Bucket in the common account for CTR records
  pEnvironment:
    Type: String
    Default: DEV
    Description: Environment label to apply to resources naming
  pEnvironmentLowerCase:
    Type: String
    Default: dev
    Description: Environment label to apply to resources naming, lower case
  pEnvironmentUpperCase:
    Type: String
    Default: DEV
    Description: Environment label to apply to resources naming, upper case
  pDepartment:
    Type: String
    Default: ccm
    Description: Department identifier for unique bucket naming, lowercase
  pCustomerReportBucket:
    Type: String
    Description: Name of Customer S3 Bucket for raw agent event reports

  pAgentKinesisStreamName:
    Type: String
    Description: Name of pre-existing kinesis stream

Resources:

  CustomerParquetFirehose:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: !Sub "kfh-${pDepartment}-mi-agent-events-${pEnvironmentLowerCase}"
      DeliveryStreamType: KinesisStreamAsSource
      KinesisStreamSourceConfiguration:
        KinesisStreamARN: !Sub "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${pAgentKinesisStreamName}"
        RoleARN: !GetAtt AgentEventsStreamFirehoseIAMRole.Arn
      ExtendedS3DestinationConfiguration:
        BucketARN: !Sub "arn:aws:s3:::${pCtrCommonDestination}"
        BufferingHints:
          IntervalInSeconds: 300
          SizeInMBs: 128
        CompressionFormat: UNCOMPRESSED
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref AgentEventsFirehoseLogGroup
          LogStreamName: !Ref AgentEventsFirehoseLogStream

        S3BackupMode: Enabled
        S3BackupConfiguration:
          RoleARN: !GetAtt AgentEventsStreamFirehoseIAMRole.Arn
          BucketARN: !Sub "arn:aws:s3:::${pCustomerReportBucket}"
          Prefix: "raw-agentevents/"
          BufferingHints:
            IntervalInSeconds: 300
            SizeInMBs: 128
          CompressionFormat: UNCOMPRESSED
        Prefix: "agent_events/"
        RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/CA_MI_${pEnvironmentUpperCase}"

  AgentEventsStreamFirehoseIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "rl_mi_agent_events_${pEnvironmentLowerCase}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action: "sts:AssumeRole"
            Principal: 
              "Service": "firehose.amazonaws.com"
      Policies:
      - PolicyName: !Sub "access_reporting_bucket_only_${pEnvironmentLowerCase}"
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Action:
            - "glue:*"
            Effect: Allow
            Resource: "*"
          - Action:
            - s3:AbortMultipartUpload
            - s3:GetBucketLocation
            - s3:GetObject
            - s3:ListBucket
            - s3:ListBucketMultipartUploads
            - s3:PutObject
            - s3:PutObjectAcl
            Resource:
            - !Sub "arn:aws:s3:::${pCtrCommonDestination}"
            - !Sub "arn:aws:s3:::${pCtrCommonDestination}/*"
            - !Sub "arn:aws:s3:::${pCustomerReportBucket}"
            - !Sub "arn:aws:s3:::${pCustomerReportBucket}/*"
            Effect: Allow
          - Action:
            - logs:PutLogEvents
            Resource: !GetAtt AgentEventsFirehoseLogGroup.Arn
            Effect: Allow
          - Action:
              - kinesis:*
            Resource: !Sub "arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${pAgentKinesisStreamName}"
            Effect: Allow

  AgentEventsFirehoseLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14
      LogGroupName: !Sub "/firehose/mi-${pEnvironmentLowerCase}-agent-events"

  AgentEventsFirehoseLogStream:
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref AgentEventsFirehoseLogGroup


  #--------------- GLUE Stuff ---------------
  #                ----------
  GlueAgentEventsTable:
    Type: AWS::Glue::Table
    Properties:
      DatabaseName: !Ref pTransformationDb
      CatalogId: !Ref AWS::AccountId
      TableInput:
        Name: !Sub "glt_agent_events_${pEnvironmentLowerCase}"
        TableType: EXTERNAL_TABLE
        Parameters:
          classification: json
        StorageDescriptor:
          OutputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat
          InputFormat: org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat
          SerdeInfo:
             Name: "serde-info"
             SerializationLibrary: org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe
          Columns:
          - Name: AWSAccountId
            Type: string
          - Name: AgentARN
            Type: string
          - Name: CurrentAgentSnapshot
            Type: string
          - Name: EventId
            Type: string
          - Name: EventType
            Type: string
          - Name: EventTimestamp
            Type: timestamp
          - Name: InstanceARN
            Type: string
          - Name: PreviousAgentSnapshot
            Type: string
          - Name: Version
            Type: string
