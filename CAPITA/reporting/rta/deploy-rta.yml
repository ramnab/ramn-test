AWSTemplateFormatVersion: '2010-09-09'
Description: Main Capita RTA web application
Outputs:
  oAgentEventStream:
    Value:
      Ref: RtaAgentStatusKinesisStream
  oAgentEventStreamArn:
    Value:
      Fn::GetAtt:
      - RtaAgentStatusKinesisStream
      - Arn
  oRtaAlarmsDb:
    Value:
      Ref: RtaAlarmsDb
  oRtaAlarmsDbArn:
    Value:
      Fn::GetAtt:
      - RtaAlarmsDb
      - Arn
  oRtaKinesisExternalRole:
    Value:
      Fn::GetAtt:
      - RtaKinesisExternalRole
      - Arn
Parameters:
  pAgentSchedule:
    Description: S3 location of the current agent schedule, e.g. s3://BUCKET/PREFIX
    Type: String
  pDepartment:
    Default: ccm
    Description: Department identifier for unique bucket naming, lowercase
    Type: String
  pEnvironment:
    Default: DEV
    Description: Environment label to apply to resources naming
    Type: String
  pEnvironmentLowerCase:
    Default: dev
    Description: Environment label to apply to resources naming, lowercase
    Type: String
Resources:
  RtaAgentStatusKinesisStream:
    Properties:
      Name:
        Fn::Sub: ks-${pDepartment}-agent-events-${pEnvironmentLowerCase}
      ShardCount: 1
      Tags:
      - Key: tech:ApplicationID
        Value:
          Fn::Sub: capita-${pDepartment}-rta-webapp
      - Key: tech:Environment
        Value:
          Ref: pEnvironmentLowerCase
      - Key: bus:BusinessUnit
        Value:
          Ref: pDepartment
    Type: AWS::Kinesis::Stream
  RtaAlarmsDb:
    Properties:
      AttributeDefinitions:
      - AttributeName: username
        AttributeType: S
      - AttributeName: alarmcode
        AttributeType: S
      KeySchema:
      - AttributeName: username
        KeyType: HASH
      - AttributeName: alarmcode
        KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 1
      TableName:
        Fn::Sub: rta-alarmsdb-${pDepartment}-${pEnvironmentLowerCase}
      Tags:
      - Key: tech:ApplicationID
        Value:
          Fn::Sub: capita-${pDepartment}-rta-webapp
      - Key: tech:Environment
        Value:
          Ref: pEnvironmentLowerCase
      - Key: bus:BusinessUnit
        Value:
          Ref: pDepartment
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
    Type: AWS::DynamoDB::Table
  RtaKinesisEventsToLambda:
    DependsOn:
    - RtaAgentStatusKinesisStream
    - RtaLambda
    Properties:
      EventSourceArn:
        Fn::GetAtt:
        - RtaAgentStatusKinesisStream
        - Arn
      FunctionName:
        Ref: RtaLambda
      StartingPosition: TRIM_HORIZON
    Type: AWS::Lambda::EventSourceMapping
  RtaKinesisExternalRole:
    DependsOn:
    - RtaAgentStatusKinesisStream
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            AWS: '907290942892'
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            AWS: '443350248290'
        Version: '2012-10-17'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonKinesisAnalyticsFullAccess
      Path: /
      RoleName:
        Fn::Sub: CA_RTA_${pEnvironment}
    Type: AWS::IAM::Role
  RtaLambda:
    DependsOn:
    - RtaAgentStatusKinesisStream
    - RtaAlarmsDb
    Properties:
      CodeUri: s3://s3-capita-ccm-test-lambdas-eu-central-1/d4cbe2a56d8bfbf89ea26d0e35999337
      Environment:
        Variables:
          AGENT_SCHEDULE:
            Ref: pAgentSchedule
          ALARM_DB:
            Ref: RtaAlarmsDb
      FunctionName:
        Fn::Sub: lmbRtaApp-${pDepartment}-${pEnvironment}
      Handler: lambda_handler.handler
      Policies:
      - AWSLambdaExecute
      - Statement:
        - Action:
          - kinesis:GetRecords
          - kinesis:GetShardIterator
          - kinesis:DescribeStream
          - kinesis:ListStreams
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - RtaAgentStatusKinesisStream
            - Arn
        - Action:
          - dynamodb:*
          Effect: Allow
          Resource:
            Fn::GetAtt:
            - RtaAlarmsDb
            - Arn
        Version: '2012-10-17'
      Runtime: python3.6
      Tags:
        bus:BusinessUnit:
          Ref: pDepartment
        tech:ApplicationID:
          Fn::Sub: capita-${pDepartment}-rta-webapp
        tech:Environment:
          Ref: pEnvironmentLowerCase
      Timeout: 180
    Type: AWS::Serverless::Function
  RtaLambdaKinesisPermissions:
    DependsOn:
    - RtaAgentStatusKinesisStream
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Ref: RtaLambda
      Principal: kinesis.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - RtaAgentStatusKinesisStream
        - Arn
    Type: AWS::Lambda::Permission
Transform: AWS::Serverless-2016-10-31
