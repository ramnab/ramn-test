AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Verify lambda setup for Capita RTA web application

Parameters:
  pEnvironment:
    Type: String
    Default: DEV
    Description: Environment label to apply to resources naming
  pEnvironmentLowerCase:
    Type: String
    Default: dev
    Description: Environment label to apply to resources naming, lowercase
  pDepartment:
    Type: String
    Default: ccm
    Description: Department identifier for unique bucket naming, lowercase

  pCronExpression:
    Type: String
    Default: "cron(0/15 6-22 * * ? *)"
    Description: Full cron expression for health check
  pTopic:
    Type: String
    Description: SNS topic to send errors to (created by Verify stack)


Resources:

  RtaHealthLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "lmbRtaHealth-${pDepartment}-${pEnvironment}"
      Handler: lambda_handler.handler
      Runtime: python3.6
      Timeout: 180
      CodeUri: ../src/health/code/
      Policies: 
        - AWSLambdaExecute
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
                - s3:List*
              Resource:
                - !Sub "arn:aws:s3:::s3-capita-${pDepartment}-common-${pEnvironmentLowerCase}-rta-agentschedules"
                - !Sub "arn:aws:s3:::s3-capita-${pDepartment}-common-${pEnvironmentLowerCase}-rta-agentschedules/*"
                - !Sub "arn:aws:s3:::s3-capita-${pDepartment}-connect-common-${pEnvironmentLowerCase}-reporting"
                - !Sub "arn:aws:s3:::s3-capita-${pDepartment}-connect-common-${pEnvironmentLowerCase}-reporting/*"
            - Effect: Allow
              Action:
                - sns:Publish
              Resource: !Ref pTopic
      Environment:
        Variables:
          AGENT_SCHEDULE_BUCKET: !Sub "s3-capita-ccm-common-${pEnvironmentLowerCase}-rta-agentschedules"
          ASPECT_PREFIX: "uploads/TUK-ASPECT-LIVE-"
          ASPECT_FRESH_THRESHOLD: "20"
          SCHEDULE_FRESH_THRESHOLD: "60"
          REPORTING_BUCKET: !Sub "s3-capita-ccm-connect-common-${pEnvironmentLowerCase}-reporting"
          TOPIC: !Ref pTopic
      Tags:
          "tech:ApplicationID": !Sub "capita-${pDepartment}-rta-health"
          "tech:Environment": !Ref pEnvironmentLowerCase
          "bus:BusinessUnit": !Ref pDepartment

  RtaHealthLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: RtaHealthLambda
    Properties: 
      RetentionInDays: 3
      LogGroupName: !Sub "/aws/lambda/${RtaHealthLambda}"

  HealthCheckTrigger:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: !Ref pCronExpression
      State: DISABLED
      Targets:
      - Arn: !GetAtt RtaHealthLambda.Arn
        Id: healthtrigger
        Input: '{}'


  HealthCheckTriggerLambdaPermission:
    Type: AWS::Lambda::Permission
    DependsOn: HealthCheckTrigger
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref RtaHealthLambda
      Principal: events.amazonaws.com
      SourceArn: !GetAtt HealthCheckTrigger.Arn
